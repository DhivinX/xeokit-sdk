import{_ as n,o as s,c as a,e as t}from"./app-8MhyAxuV.js";const e={},p=t(`<h3 id="spinning-textured-box" tabindex="-1"><a class="header-anchor" href="#spinning-textured-box"><span>Spinning Textured Box</span></a></h3><p>Let&#39;s make a simple application using xeokit - a spinning, textured box.</p><p>First import the npm modules we need from the SDK:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @xeokit/scene
<span class="token function">npm</span> <span class="token function">install</span> @xeokit/viewer
<span class="token function">npm</span> <span class="token function">install</span> @xeokit/webglrenderer
<span class="token function">npm</span> <span class="token function">install</span> @xeokit/core/constants
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then create a simple HTML page with a canvas element:</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>xeokit Spinning Textured Box<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myCanvas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now let&#39;s write some JavaScript to create the spinning, textured box.</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>Scene<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@xeokit/scene&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>TrianglesPrimitive<span class="token punctuation">,</span> LinearEncoding<span class="token punctuation">,</span> LinearFilter<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@xeokit/constants&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>Viewer<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@xeokit/viewer&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>WebGLRenderer<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@xeokit/webglrenderer&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Scene graph</span>

<span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// WebGL renderers kernel</span>

<span class="token keyword">const</span> viewer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Viewer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// Browser-base viewer</span>
    scene<span class="token punctuation">,</span>
    renderer
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> view <span class="token operator">=</span> myViewer<span class="token punctuation">.</span><span class="token function">createView</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// Independent view </span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;myView&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">canvasId</span><span class="token operator">:</span> <span class="token string">&quot;myView1&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

view<span class="token punctuation">.</span>camera<span class="token punctuation">.</span>eye <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Looking down the -Z axis</span>
view<span class="token punctuation">.</span>camera<span class="token punctuation">.</span>look <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
view<span class="token punctuation">.</span>camera<span class="token punctuation">.</span>up <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> sceneModel <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">createModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Start building the scene graph</span>

sceneModel<span class="token punctuation">.</span><span class="token function">createGeometry</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// Define a box-shaped geometry</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;boxGeometry&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">primitive</span><span class="token operator">:</span> TrianglesPrimitive<span class="token punctuation">,</span>
    <span class="token literal-property property">positions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">uvs</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">indices</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

sceneModel<span class="token punctuation">.</span><span class="token function">createTexture</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// </span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;boxColorTexture&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">src</span><span class="token operator">:</span> <span class="token string">&quot;myTexture.png&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">encoding</span><span class="token operator">:</span> LinearEncoding<span class="token punctuation">,</span>
    <span class="token literal-property property">magFilter</span><span class="token operator">:</span> LinearFilter<span class="token punctuation">,</span>
    <span class="token literal-property property">minFilter</span><span class="token operator">:</span> LinearFilter
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

sceneModel<span class="token punctuation">.</span><span class="token function">createTextureSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;boxTextureSet&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colorTextureId</span><span class="token operator">:</span> <span class="token string">&quot;boxColorTexture&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

sceneModel<span class="token punctuation">.</span><span class="token function">createLayerMesh</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;boxMesh&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">geometryId</span><span class="token operator">:</span> <span class="token string">&quot;boxGeometry&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">metallic</span><span class="token operator">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token comment">// PBR material attributes</span>
    <span class="token literal-property property">roughness</span><span class="token operator">:</span> <span class="token number">0.3</span><span class="token punctuation">,</span>
    <span class="token literal-property property">textureSetId</span><span class="token operator">:</span> <span class="token string">&quot;boxTextureSet&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

sceneModel<span class="token punctuation">.</span><span class="token function">createObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;boxObject&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">meshIds</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;boxMesh&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

sceneModel<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// Compresses textures, geometries etc.</span>

    <span class="token comment">// A textured box object now appears on our View&#39;s canvas.</span>

    <span class="token comment">// We can now show/hide/select/highlight our box through the View:</span>

    view<span class="token punctuation">.</span>objects<span class="token punctuation">[</span><span class="token string">&quot;boxObject&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>visible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    view<span class="token punctuation">.</span>objects<span class="token punctuation">[</span><span class="token string">&quot;boxObject&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>highlighted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">// etc.</span>

    <span class="token comment">// Start orbiting the camera:</span>

    viewer<span class="token punctuation">.</span>onTick<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        view<span class="token punctuation">.</span>camera<span class="token punctuation">.</span><span class="token function">orbitYaw</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this example:</p><ol><li>The code imports necessary modules needed to create a 3D scene application: Scene, TrianglesPrimitive, LinearEncoding, LinearFilter, Viewer, and WebGLRenderer.</li><li>A new Scene object is initialized and a WebGLRenderer object is instantiated.</li><li>A new Viewer object is also instantiated with the Scene and Renderer objects as parameters.</li><li>A view is then created with a given ID and canvas ID. The camera parameters such as eye, look and up are set.</li><li>A sceneModel is created which includes a geometry with positions, uvs and indices, a texture and textureSet.</li><li>A mesh is then created with the geometry, color, metallic, roughness and textureSet.</li><li>A 3D object is created with the mesh.</li><li>The sceneModel is built and the object&#39;s visibility and highlight is set to true and false respectively.</li><li>Finally a callback function to the viewer is set to orbit the camera&#39;s yaw by 1.0 on each tick.</li></ol><h3 id="gltf-model-viewer" tabindex="-1"><a class="header-anchor" href="#gltf-model-viewer"><span>glTF Model Viewer</span></a></h3><p>Let&#39;s make a simple application that views a glTF file in the browser.</p><p>First import the npm modules we need from the SDK:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @xeokit/scene
<span class="token function">npm</span> <span class="token function">install</span> @xeokit/viewer
<span class="token function">npm</span> <span class="token function">install</span> @xeokit/webglrenderer
<span class="token function">npm</span> <span class="token function">install</span> @xeokit/constants
<span class="token function">npm</span> <span class="token function">install</span> @xeokit/gltf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here&#39;s the JavaScript for our glTF viewer app:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>Scene<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@xeokit/scene&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>TrianglesPrimitive<span class="token punctuation">,</span> LinearEncoding<span class="token punctuation">,</span> LinearFilter<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@xeokit/constants&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>Viewer<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@xeokit/viewer&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>WebGLRenderer<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@xeokit/webglrenderer&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>loadGLTF<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@xeokit/gltf&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Scene graph</span>

<span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// WebGL renderers kernel</span>

<span class="token keyword">const</span> viewer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Viewer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// Browser-base viewer</span>
    scene<span class="token punctuation">,</span>
    renderer
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> view <span class="token operator">=</span> myViewer<span class="token punctuation">.</span><span class="token function">createView</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// Independent view </span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;myView&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">canvasId</span><span class="token operator">:</span> <span class="token string">&quot;myView1&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

view<span class="token punctuation">.</span>camera<span class="token punctuation">.</span>eye <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Looking down the -Z axis</span>
view<span class="token punctuation">.</span>camera<span class="token punctuation">.</span>look <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
view<span class="token punctuation">.</span>camera<span class="token punctuation">.</span>up <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> sceneModel <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">createModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Start building the scene graph</span>

<span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;myModel.glb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

    response<span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

        <span class="token function">loadGLTF</span><span class="token punctuation">(</span><span class="token punctuation">{</span>data<span class="token punctuation">,</span> scene<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

            sceneModel<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// Compresses textures, geometries etc.</span>

                <span class="token comment">// A model now appears on our View&#39;s canvas.</span>

                <span class="token comment">// We can now show/hide/select/highlight the model&#39;s objects through the View:</span>

                view<span class="token punctuation">.</span>objects<span class="token punctuation">[</span><span class="token string">&quot;2hExBg8jj4NRG6zzE$aSi6&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>visible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                view<span class="token punctuation">.</span>objects<span class="token punctuation">[</span><span class="token string">&quot;2hExBg8jj4NRG6zzE$aSi6&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>highlighted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">// etc.</span>

                <span class="token comment">// Start orbiting the camera:</span>

                viewer<span class="token punctuation">.</span>onTick<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    view<span class="token punctuation">.</span>camera<span class="token punctuation">.</span><span class="token function">orbitYaw</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this example, we are:</p><ol><li>Instantiating a Scene and WebGLRenderer instance, and attaching them to a Viewer.</li><li>Creating a view, and setting its camera to view the scene from a certain position.</li><li>Fetching a model in GLTF format, and loading it into the Scene.</li><li>Making a couple of objects visible and un-highlighted.</li><li>Subscribing to the Viewer&#39;s onTick event, and setting the view&#39;s camera to orbit around the model.</li></ol><h3 id="convert-a-gltf-file-to-xkt" tabindex="-1"><a class="header-anchor" href="#convert-a-gltf-file-to-xkt"><span>Convert a glTF file to XKT</span></a></h3><p>Let&#39;s make a simple NodeJS script that converts a glTF file into xeokit&#39;s native XKT format.</p><p>First import the npm modules we need from the SDK. Note that we don&#39;t need the viewer for this example.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @xeokit/scene
<span class="token function">npm</span> <span class="token function">install</span> @xeokit/core/constants
<span class="token function">npm</span> <span class="token function">install</span> @xeokit/gltf
<span class="token function">npm</span> <span class="token function">install</span> @xeokit/dtx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here&#39;s the JavaScript for our converter script.</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>Scene<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@xeokit/scene&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>Data<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@xeokit/data&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>TrianglesPrimitive<span class="token punctuation">,</span> LinearEncoding<span class="token punctuation">,</span> LinearFilter<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@xeokit/constants&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>loadGLTF<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@xeokit/gltf&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>saveXKT<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;dtx&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Scene graph</span>
<span class="token keyword">const</span> sceneModel <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">createModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;myModel&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Start building the scene graph</span>

<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dataModel <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">createModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;myModel&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Will model the glTF scene hierarchy</span>

fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;./tests/assets/HousePlan.glb&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> buffer</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> arraybuffer <span class="token operator">=</span> <span class="token function">toArrayBuffer</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">loadGLTF</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> arrayBuffer<span class="token punctuation">,</span>
        sceneModel<span class="token punctuation">,</span>
        dataModel
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        sceneModel<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// Compresses textures, geometries etc.</span>
            <span class="token keyword">const</span> arrayBuffer <span class="token operator">=</span> <span class="token function">saveXKT</span><span class="token punctuation">(</span><span class="token punctuation">{</span> sceneModel<span class="token punctuation">,</span> dataModel <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&#39;myModel.dtx&#39;</span><span class="token punctuation">,</span> arrayBuffer<span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">toArrayBuffer</span><span class="token punctuation">(</span><span class="token parameter">buf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> ab <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>ab<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> buf<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        view<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> buf<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ab<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The script does the following steps:</p><ol><li>Import packages and modules relevant to xeokit, as well as Node&#39;s file system module, which is used to read and write files.</li><li>Create a new Scene instance.</li><li>Create a new Data instance and Model with ID &quot;myModel&quot;.</li><li>Use Node&#39;s fs module to read file called &quot;HousePlan.glb&quot; asynchronously.</li><li>Create an ArrayBuffer from the file using the toArrayBuffer() function.</li><li>Invoke the xeokit method loadGLTF() to load the model.</li><li>Invoke the xeokit method build() to prepare the scene model.</li><li>Invoke the xeokit method saveXKT() to create an XKT file from the scene model and data model.</li><li>Use Node&#39;s fs module to write the XKT file to disk.</li><li>The toArrayBuffer() function is called to create an ArrayBuffer from a Buffer object.</li></ol>`,26),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","quickstart.html.vue"]]),k=JSON.parse('{"path":"/quickstart.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Spinning Textured Box","slug":"spinning-textured-box","link":"#spinning-textured-box","children":[]},{"level":3,"title":"glTF Model Viewer","slug":"gltf-model-viewer","link":"#gltf-model-viewer","children":[]},{"level":3,"title":"Convert a glTF file to XKT","slug":"convert-a-gltf-file-to-xkt","link":"#convert-a-gltf-file-to-xkt","children":[]}],"git":{"updatedTime":1709251115000,"contributors":[{"name":"DhivinX","email":"d.szaradowski@gmail.com","commits":1}]},"filePathRelative":"quickstart.md"}');export{r as comp,k as data};
